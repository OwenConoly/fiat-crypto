SECTION .text
	GLOBAL secp256k1_fe_mul_inner
secp256k1_fe_mul_inner:
	push	r15
	push	r14
	push	r13
	push	r12
	push	rbx
	mov	rbx, rdx

	mov	r10, qword ptr [rsi]
	mov	r11, qword ptr [rsi + 8]
	mov	r12, qword ptr [rsi + 16]
	mov	r13, qword ptr [rsi + 24]
	mov	r14, qword ptr [rsi + 32]
	mov	rax, qword ptr [rbx]
	mul	r13
	mov	rcx, rax
	mov	r15, rdx
	mov	rax, qword ptr [rbx + 8]
	mul	r12
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 16]
	mul	r11
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 24]
	mul	r10
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 32]
	mul	r14
	mov	r8, rax
	mov	r9, rdx
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	rdx, 68719492368
	mul	rdx
	add	rcx, rax
	adc	r15, rdx
	shrd	r8, r9, 52
	mov	rsi, rcx
	mov	rdx, 4503599627370495
	and	rsi, rdx
	mov	qword ptr [rsp - 8], rsi
	shrd	rcx, r15, 52
	xor	r15, r15
	mov	rax, qword ptr [rbx]
	mul	r14
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 8]
	mul	r13
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 16]
	mul	r12
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 24]
	mul	r11
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 32]
	mul	r10
	add	rcx, rax
	adc	r15, rdx
	mov	rax, r8
	mov	rdx, 68719492368
	mul	rdx
	add	rcx, rax
	adc	r15, rdx
	mov	rsi, rcx
	mov	rdx, 4503599627370495
	and	rsi, rdx
	shrd	rcx, r15, 52
	xor	r15, r15
	mov	rax, rsi
	shr	rax, 48
	mov	qword ptr [rsp - 24], rax
	mov	rax, 281474976710655
	and	rsi, rax
	mov	qword ptr [rsp - 16], rsi
	mov	rax, qword ptr [rbx]
	mul	r10
	mov	r8, rax
	mov	r9, rdx
	mov	rax, qword ptr [rbx + 8]
	mul	r14
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 16]
	mul	r13
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 24]
	mul	r12
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 32]
	mul	r11
	add	rcx, rax
	adc	r15, rdx
	mov	rsi, rcx
	mov	rdx, 4503599627370495
	and	rsi, rdx
	shrd	rcx, r15, 52
	xor	r15, r15
	shl	rsi, 4
	mov	rax, qword ptr [rsp - 24]
	or	rsi, rax ; SHOULD BE or rsi, rax.
	mov	rax, 4294968273
	mul	rsi
	add	r8, rax
	adc	r9, rdx
	mov	rax, r8
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	qword ptr [rdi], rax
	shrd	r8, r9, 52
	xor	r9, r9
	mov	rax, qword ptr [rbx]
	mul	r11
	add	r8, rax
	adc	r9, rdx
	mov	rax, qword ptr [rbx + 8]
	mul	r10
	add	r8, rax
	adc	r9, rdx
	mov	rax, qword ptr [rbx + 16]
	mul	r14
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 24]
	mul	r13
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 32]
	mul	r12
	add	rcx, rax
	adc	r15, rdx
	mov	rax, rcx
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	rdx, 68719492368
	mul	rdx
	add	r8, rax
	adc	r9, rdx
	shrd	rcx, r15, 52
	xor	r15, r15
	mov	rax, r8
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	qword ptr [rdi + 8], rax
	shrd	r8, r9, 52
	xor	r9, r9
	mov	rax, qword ptr [rbx]
	mul	r12
	add	r8, rax
	adc	r9, rdx
	mov	rax, qword ptr [rbx + 8]
	mul	r11
	add	r8, rax
	adc	r9, rdx
	mov	rax, qword ptr [rbx + 16]
	mul	r10
	add	r8, rax
	adc	r9, rdx
	mov	rsi, qword ptr [rsp - 16]
	mov	r10, qword ptr [rsp - 8]
	mov	rax, qword ptr [rbx + 24]
	mul	r14
	add	rcx, rax
	adc	r15, rdx
	mov	rax, qword ptr [rbx + 32]
	mul	r13
	add	rcx, rax
	adc	r15, rdx
	mov	rax, rcx
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	rdx, 68719492368
	mul	rdx
	add	r8, rax
	adc	r9, rdx
	shrd	rcx, r15, 52
	mov	rax, r8
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	qword ptr [rdi + 16], rax
	shrd	r8, r9, 52
	xor	r9, r9
	add	r8, r10
	mov	rax, rcx
	mov	rdx, 68719492368
	mul	rdx
	add	r8, rax
	adc	r9, rdx
	mov	rax, r8
	mov	rdx, 4503599627370495
	and	rax, rdx
	mov	qword ptr [rdi + 24], rax
	shrd	r8, r9, 52
	add	r8, rsi
	mov	qword ptr [rdi + 32], r8

	pop	rbx
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
; generated by typing "clang -S -march=native -mtune=native -O3 -mllvm --x86-asm-syntax=intel c_file.c".
; where c_file.c contains the function secp256k1_fe_mul_inner, as in https://github.com/bitcoin-core/secp256k1/blob/master/src/field_5x52_asm_impl.h as of 07/28/2022.
; debugging stuff (.cfi_something_something) removed. replaced movabs with mov.
